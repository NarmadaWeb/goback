name: Go CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [published]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: '1.24'

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          version: v2.4.0

  codeql:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'go' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}

    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"

  build:
    name: Build
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
            suffix: linux-x64
          - os: darwin
            arch: arm64
            suffix: darwin-arm64
          - os: darwin
            arch: amd64
            suffix: darwin-x64
          - os: linux
            arch: arm64
            suffix: linux-arm64
          - os: windows
            arch: amd64
            suffix: windows-x64
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: '1.24'

      - name: Build binary
        run: |
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o goback-${{ matrix.suffix }} ${{ matrix.os == 'windows' && '.exe' || '' }} ./cmd

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: goback-${{ matrix.suffix }}
          path: goback-${{ matrix.suffix }}${{ matrix.os == 'windows' && '.exe' || '' }}

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release'
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
