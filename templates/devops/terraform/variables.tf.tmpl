# Variables for {{.ProjectName}} Terraform configuration

variable "aws_region" {
  description = "AWS region"
  type        = string
  default     = "us-west-2"
}

variable "environment" {
  description = "Environment name"
  type        = string
  default     = "development"

  validation {
    condition     = contains(["development", "staging", "production"], var.environment)
    error_message = "Environment must be one of: development, staging, production."
  }
}

variable "project_name" {
  description = "Name of the project"
  type        = string
  default     = "{{.ProjectName}}"
}

# ECS Variables
variable "ecs_cpu" {
  description = "The number of cpu units used by the task"
  type        = number
  default     = 256
}

variable "ecs_memory" {
  description = "The amount (in MiB) of memory used by the task"
  type        = number
  default     = 512
}

variable "ecs_desired_count" {
  description = "Number of instances of the task definition to place and keep running"
  type        = number
  default     = 2
}

# Auto Scaling Variables
variable "ecs_min_capacity" {
  description = "Minimum number of tasks to run"
  type        = number
  default     = 1
}

variable "ecs_max_capacity" {
  description = "Maximum number of tasks to run"
  type        = number
  default     = 10
}

variable "cpu_target_value" {
  description = "Target CPU utilization for auto scaling"
  type        = number
  default     = 70
}

variable "memory_target_value" {
  description = "Target memory utilization for auto scaling"
  type        = number
  default     = 80
}

{{- if .Database.Enabled}}
# Database Variables
variable "db_instance_class" {
  description = "The instance type of the RDS instance"
  type        = string
  default     = "db.t3.micro"
}

variable "db_allocated_storage" {
  description = "The allocated storage in gigabytes"
  type        = number
  default     = 20
}

variable "db_max_allocated_storage" {
  description = "The upper limit to which Amazon RDS can automatically scale the storage of the DB instance"
  type        = number
  default     = 100
}

variable "db_username" {
  description = "Username for the master DB user"
  type        = string
  default     = "{{.ProjectName}}_admin"
  sensitive   = true
}

variable "db_backup_retention_days" {
  description = "The days to retain backups for"
  type        = number
  default     = 7
}

variable "db_multi_az" {
  description = "Specifies if the RDS instance is multi-AZ"
  type        = bool
  default     = false
}

variable "db_publicly_accessible" {
  description = "Bool to control if instance is publicly accessible"
  type        = bool
  default     = false
}

variable "db_storage_encrypted" {
  description = "Specifies whether the DB instance is encrypted"
  type        = bool
  default     = true
}

variable "db_monitoring_interval" {
  description = "The interval for collecting enhanced monitoring metrics"
  type        = number
  default     = 60
}

variable "db_performance_insights_enabled" {
  description = "Specifies whether Performance Insights are enabled"
  type        = bool
  default     = true
}

variable "db_parameter_group_family" {
  description = "The DB parameter group family"
  type        = string
  {{- if eq .Database.Type "postgresql"}}
  default     = "postgres15"
  {{- else if eq .Database.Type "mysql"}}
  default     = "mysql8.0"
  {{- end}}
}
{{- end}}

# Networking Variables
variable "vpc_cidr" {
  description = "CIDR block for VPC"
  type        = string
  default     = "10.0.0.0/16"
}

variable "availability_zones_count" {
  description = "Number of availability zones to use"
  type        = number
  default     = 3
}

# Load Balancer Variables
variable "enable_deletion_protection" {
  description = "If true, deletion of the load balancer will be disabled via the AWS API"
  type        = bool
  default     = false
}

variable "enable_http2" {
  description = "Indicates whether HTTP/2 is enabled in application load balancers"
  type        = bool
  default     = true
}

variable "idle_timeout" {
  description = "The time in seconds that the connection is allowed to be idle"
  type        = number
  default     = 60
}

# SSL/TLS Variables
variable "ssl_policy" {
  description = "The name of the SSL Policy for the listener"
  type        = string
  default     = "ELBSecurityPolicy-TLS-1-2-2017-01"
}

variable "certificate_arn" {
  description = "The ARN of the default SSL server certificate"
  type        = string
  default     = ""
}

# Monitoring Variables
variable "log_retention_days" {
  description = "Specifies the number of days you want to retain log events"
  type        = number
  default     = 14
}

variable "enable_container_insights" {
  description = "Controls if ECS Cluster has container insights enabled"
  type        = bool
  default     = false
}

# Security Variables
variable "allowed_cidr_blocks" {
  description = "List of CIDR blocks that are allowed to access the application"
  type        = list(string)
  default     = ["0.0.0.0/0"]
}

variable "enable_waf" {
  description = "Enable AWS WAF for the load balancer"
  type        = bool
  default     = false
}

# Backup Variables
variable "backup_retention_period" {
  description = "The number of days to retain backups"
  type        = number
  default     = 7
}

variable "backup_window" {
  description = "The daily time range during which automated backups are created"
  type        = string
  default     = "03:00-04:00"
}

variable "maintenance_window" {
  description = "The window to perform maintenance in"
  type        = string
  default     = "sun:04:00-sun:05:00"
}

# Route53 Variables
variable "domain_name" {
  description = "The domain name for the application"
  type        = string
  default     = ""
}

variable "create_route53_record" {
  description = "Whether to create Route53 record"
  type        = bool
  default     = false
}

# CloudFront Variables
variable "enable_cloudfront" {
  description = "Enable CloudFront distribution"
  type        = bool
  default     = false
}

variable "cloudfront_price_class" {
  description = "The price class for CloudFront distribution"
  type        = string
  default     = "PriceClass_100"
}

# ElastiCache Variables (Redis)
variable "enable_redis" {
  description = "Enable Redis ElastiCache cluster"
  type        = bool
  default     = false
}

variable "redis_node_type" {
  description = "The instance class used for Redis nodes"
  type        = string
  default     = "cache.t3.micro"
}

variable "redis_num_cache_nodes" {
  description = "The number of cache nodes"
  type        = number
  default     = 1
}

variable "redis_parameter_group_name" {
  description = "Name of the parameter group to associate with this cache cluster"
  type        = string
  default     = "default.redis7"
}

# S3 Variables
variable "enable_s3_bucket" {
  description = "Enable S3 bucket for file storage"
  type        = bool
  default     = false
}

variable "s3_versioning_enabled" {
  description = "Enable versioning on S3 bucket"
  type        = bool
  default     = true
}

variable "s3_server_side_encryption" {
  description = "Server-side encryption configuration for S3 bucket"
  type        = string
  default     = "AES256"
}

# KMS Variables
variable "create_kms_key" {
  description = "Create KMS key for encryption"
  type        = bool
  default     = false
}

variable "kms_deletion_window" {
  description = "Duration in days after which the key is deleted after destruction"
  type        = number
  default     = 7
}

# Tags
variable "additional_tags" {
  description = "Additional tags to apply to resources"
  type        = map(string)
  default     = {}
}

# Feature Flags
variable "enable_detailed_monitoring" {
  description = "Enable detailed monitoring for ECS service"
  type        = bool
  default     = false
}

variable "enable_service_discovery" {
  description = "Enable ECS Service Discovery"
  type        = bool
  default     = false
}

variable "enable_secrets_manager" {
  description = "Enable AWS Secrets Manager for sensitive data"
  type        = bool
  default     = true
}

variable "enable_parameter_store" {
  description = "Enable AWS Systems Manager Parameter Store"
  type        = bool
  default     = false
}

# Cost Optimization
variable "enable_spot_instances" {
  description = "Enable Spot instances for ECS Fargate"
  type        = bool
  default     = false
}

variable "spot_instance_percentage" {
  description = "Percentage of Spot instances to use"
  type        = number
  default     = 50
}
